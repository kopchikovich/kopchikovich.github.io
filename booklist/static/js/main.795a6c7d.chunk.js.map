{"version":3,"sources":["components/search-input.js","components/button.js","components/header.js","data.js","components/book.js","components/booklist.js","components/checkbox.js","components/user.js","components/login-form.js","components/add-book-form.js","components/edit-book-form.js","components/main.js","components/app.js","index.js"],"names":["SearchInput","props","onChangeHandler","bind","e","this","searchHandler","target","value","className","type","placeholder","onChange","Component","Button","onClick","onClickHandler","disabled","title","Header","screen","searchInput","key","listButton","openBookListScreen","editButton","openEditBookScreen","addButton","openAddBookScreen","userButton","openUserScreen","Book","id","author","img","dateOfReading","mainIdea","quotes","db","Date","sortedBooks","Object","values","sort","a","b","book","bookId","toDateString","map","item","i","isBorderBook","checkingBookId","src","alt","switchBookToNewer","lastBookId","switchBookToOlder","length","BookList","search","state","booksToRender","regexp","RegExp","filter","list","openBook","Checkbox","checked","isChecked","User","lastBookTitle","totalRead","keys","switchTheme","lightTheme","logout","LoginForm","onSubmit","login","autoFocus","AddBookForm","date","join","submitHandler","defaultValue","year","getFullYear","month","getMonth","day","getDate","getDateString","EditBookForm","preventDefault","assign","Main","bookScreen","bookListScreen","userScreen","loginScreen","addBookScreen","editBookScreen","renderScreen","App","setState","newBook","findIndex","el","root","document","querySelector","style","setProperty","form","email","password","classList","add","setTimeout","remove","render","getElementById"],"mappings":"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","file":"static/js/main.795a6c7d.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass SearchInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n    }\r\n\r\n    onChangeHandler(e) {\r\n        this.props.searchHandler(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className={this.props.className}\r\n                type='search'\r\n                placeholder='search'\r\n                onChange={this.onChangeHandler}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchInput","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={props.className} onClick={props.onClickHandler} disabled={props.disabled}>\r\n            {props.title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport SearchInput from './search-input'\r\nimport Button from './button'\r\n\r\nconst Header = (props) => {\r\n\r\n    const {screen} = props\r\n    const searchInput = (\r\n        <SearchInput\r\n            className='input header__search-input'\r\n            key='search-inpt'\r\n            searchHandler={props.searchHandler}\r\n        />\r\n    )\r\n    const listButton = (\r\n        <Button\r\n            className='header__button header__button--list button'\r\n            key='list-btn'\r\n            title='booklist'\r\n            onClickHandler={props.openBookListScreen}\r\n        />\r\n    )\r\n    const editButton = (screen === 'book' &&\r\n        <Button\r\n            className='header__button header__button--edit button'\r\n            key='edit-btn'\r\n            title={<span className='button--edit__icon'/>}\r\n            onClickHandler={props.openEditBookScreen}\r\n        />\r\n    )\r\n    const addButton = (\r\n        <Button\r\n            className='header__button button button--add'\r\n            key='add-btn'\r\n            title='+'\r\n            onClickHandler={props.openAddBookScreen}\r\n        />\r\n    )\r\n    const userButton = (\r\n        <Button\r\n            className='header__button button button--percon-icon'\r\n            key='user-btn'\r\n            onClickHandler={props.openUserScreen}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <header className='app__header header'>\r\n\r\n            {screen === 'login'? null : screen === 'booklist'? [searchInput, addButton, userButton] : [listButton, editButton, addButton, userButton]}\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","class Book {\r\n    constructor(id, title, author, img, dateOfReading, mainIdea, quotes) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.author = author;\r\n        this.img = img;\r\n        this.dateOfReading = dateOfReading;\r\n        this.mainIdea = mainIdea;\r\n        this.quotes = quotes;\r\n    }\r\n}\r\n\r\nconst db = {\r\n    '1308s6wd1': new Book(\r\n        '1308s6wd1',\r\n        'Принципы. Жизнь и работа',\r\n        'Рэй Далио',\r\n        'img/dalio-principy.jpg',\r\n        new Date(2019, 9, 12),\r\n        'Ставить четкие цели и достигать их',\r\n        ['1. Ставьте перед собой четкие цели. 2. Выявите проблемы, стоящие у вас на пути, и не миритесь с ними. 3. Проанализируйте эти проблемы, чтобы понять причины. 4. Разработайте план, который поможет вам справиться с проблемами. 5. Делайте все необходимое, чтобы воплотить свой план и получить результат.',\r\n        'Чтобы научиться принимать наиболее эффективные решения и набраться смелости это делать, нужно: а) добиваться осуществления своих целей; б) терпеть неудачи и анализировать их, придерживаясь принципа абсолютной непредубежденности; в) меняться/развиваться, чтобы вырабатывать в себе новые способности и справляться со страхом.']\r\n    ),\r\n    '9324fdsf1': new Book(\r\n        '9324fdsf1',\r\n        'Краткие ответы на большие вопросы',\r\n        'Стивен Хокинг',\r\n        'img/hoking-kratkie-otvety.jpg',\r\n        new Date(2019, 10, 20),\r\n        'Творите будущее',\r\n        ['Так что не забывайте смотреть не только под ноги, но и на звезды. Старайтесь искать смысл в том, что вы видите, и думать о том, как и почему существует Вселенная. Будьте любознательны. Какой бы трудной ни казалась жизнь, вы всегда можете что-то сделать и чего-то добиться. Главное – никогда не сдаваться. Дайте волю воображению. Творите будущее.']\r\n    ),\r\n    'psad51sso': new Book(\r\n        'psad51sso',\r\n        'Метро 2035',\r\n        'Дмитрий Глуховский',\r\n        'img/gluhovsky-metro-2035.jpg',\r\n        new Date(2019, 11, 8),\r\n        'Хоть и умереть, но наверху',\r\n        ['А как нашим человеком еще управлять? Его все время отвлекать надо. Обуздывать. Канализировать, так сказать. Идею ему подкладывать какую-нибудь. Религию или идеологию. Врагов ему придумывать все время. Не живется ему без врагов! Он без врагов теряется! Не может себя сам определить. Ничего про себя не знает.']\r\n    ),\r\n    '323aaa76a': new Book(\r\n        '323aaa76a',\r\n        'Тук-тук, сердце!',\r\n        'Йоханнес Х. фон Борстель',\r\n        'img/borstel-tuck-tuck-serdce.jpg',\r\n        new Date(2019, 11, 15),\r\n        '«Люди, как правило, здоровы!»',\r\n        ['...но и для женщин курение отнюдь не безопасно. Особенно для тех, которые принимают противозачаточные таблетки, которые, в свою очередь, также могут провоцировать тромбозы и, как следствие, закупорку сосудов. Если женщина принимает такие таблетки и к тому же курит, она подвергается влиянию сразу двух негативных факторов, за счет чего риск сердечно-сосудистого заболевания существенно повышается.', 'Три порции свежих овощей или фруктов в день – хорошая рекомендация, а если при этом будут сочетаться разные виды овощей и фруктов, к тому же разных цветов (за окраску отвечают различные фитонутриенты), – вообще идеально.', 'Тем, кто не любит замороженные продукты, но хочет поддержать свою сердечно-сосудистую систему, подойдет свежая морковь: она очень благоприятно влияет на уровень холестерина. По мнению признанных экспертов в области питания, достаточно съедать 200 г. морковки в день.', 'Тех, кто бурно переживает неудачу в любви, нередко упрекают в слабости, но этого я понять не могу. На мой взгляд, нет ничего человечнее, чем испытывать глубокие потрясения от любви или от ее потери.']\r\n    ),\r\n    '09ssswe21': new Book(\r\n        '09ssswe21',\r\n        'Так берегись',\r\n        'Макс Фрай',\r\n        'img/frai-tak-beregis.jpg',\r\n        new Date(2019, 11, 25),\r\n        'Бремя создателя',\r\n        ['С этими словами он провалился в ад. И правильно. Чего тянуть.', '...впрочем, я почти всё на свете люблю больше всего.', 'Справляться с проблемами самостоятельно, делать больше, чем можешь, и рассчитывать только на себя даже в окружении доброй дюжины рук, готовых тебя подхватить, – не самая удачная тактика, зато крайне выигрышная стратегия. Довольно опасная, но, несомненно, выигрышная. Всегда.']\r\n    )\r\n}\r\n\r\nconst sortedBooks = Object.values(db).sort((a,b) => {\r\n    return b.dateOfReading-a.dateOfReading\r\n})\r\n\r\nexport {db, sortedBooks}","import React from 'react'\r\nimport Button from './button'\r\nimport {db, sortedBooks} from '../data'\r\n\r\nconst Book = (props) => {\r\n\r\n    const book = db[props.bookId]\r\n    const dateOfReading = book.dateOfReading.toDateString();\r\n    const quotes = book.quotes.map((item, i) => {\r\n        return <li key={i}>\"{item}\"</li>\r\n    });\r\n\r\n    const isBorderBook = (checkingBookId, bookId) => {\r\n        if (checkingBookId === bookId) {\r\n            return true\r\n        }\r\n        return false\r\n    };\r\n\r\n    return  (\r\n        <section>\r\n\r\n            <article className='book'>\r\n                <img className='book__cover' src={book.img? book.img : 'img/empty.jpg'} alt='book cover' />\r\n                <p className='book__title'>\"{book.title}\"</p>\r\n                <p className='book__author'>{book.author}</p>\r\n                <p className='book__text book__date'>Прочитано: {dateOfReading}</p>\r\n                <p className='book__text book__text--line'>Главная мысль: {book.mainIdea}</p>\r\n                <p className='book__text book__text--left'>Цитаты:</p>\r\n                <ul className='book__text'>{quotes}</ul>\r\n            </article>\r\n\r\n            <div className='controls'>\r\n                <Button\r\n                    className='controls__button'\r\n                    title='<'\r\n                    onClickHandler={props.switchBookToNewer}\r\n                    disabled={isBorderBook(props.lastBookId, props.bookId)}\r\n                />\r\n                <Button\r\n                    className='controls__button'\r\n                    title='>'\r\n                    onClickHandler={props.switchBookToOlder}\r\n                    disabled={isBorderBook(sortedBooks[sortedBooks.length-1].id, props.bookId)}\r\n                />\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Book","import React from 'react'\r\nimport {sortedBooks} from '../data'\r\n\r\nconst BookList = (props) => {\r\n\r\n    const {search} = props.state\r\n    let booksToRender = sortedBooks\r\n    if (search) {\r\n        const regexp = new RegExp(`\\\\s${search}[а-я]?\\\\s|^${search}[а-я]?\\\\s|\\\\s${search}[а-я]?.$`, \"gim\")\r\n        booksToRender = sortedBooks.filter((book) => {\r\n            return book.title.search(regexp) !== -1 || book.author.search(regexp) !== -1\r\n        })\r\n    }\r\n\r\n    const list = booksToRender.map((book, i) => {\r\n        return (\r\n            <li key={i} className=\"booklist__book\">\r\n                <button onClick={props.openBook} value={book.id}>\"{book.title}\" {book.author}</button>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"booklist\">\r\n            {list}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BookList","import React from 'react'\r\n\r\nconst Checkbox = (props) => {\r\n    return (\r\n        <input\r\n            type='checkbox'\r\n            className={props.className}\r\n            onChange={props.onChangeHandler}\r\n            checked={props.isChecked}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport {db} from '../data'\r\nimport Checkbox from './checkbox'\r\nimport Button from './button'\r\n\r\nconst User = (props) => {\r\n\r\n    const lastBookTitle = db[props.lastBookId].title\r\n    const totalRead = Object.keys(db).length\r\n\r\n    return (\r\n        <article className=\"user\">\r\n            <p className='user__text user__name'>kopchikovich</p>\r\n            <p className='user__text user__last-book'>Последняя прочитанная книга: {lastBookTitle}</p>\r\n            <p className='user__text user__total-read'>Всего прочитано: {totalRead}</p>\r\n            <p className='user__text user__switch-theme'>Светлая тема \r\n                <Checkbox className='user__checkbox' onChangeHandler={props.switchTheme} isChecked={props.lightTheme} />\r\n            </p>\r\n            <Button className='user__button-exit' title='Выйти из аккаунта' onClickHandler={props.logout} />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Button from './button'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    return (\r\n        <form className='login' onSubmit={props.login}>\r\n            <input className='login__input input' id='email' type='email' placeholder='e-mail' autoFocus={true} />\r\n            <input className='login__input input' id='password' type='password' placeholder='password' />\r\n            <Button className='login__submit' title='-->' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport Button from './button'\r\n\r\nconst AddBookForm = (props) => {\r\n\r\n    const book = props.book? props.book : null\r\n    const date = book? book.dateOfReading : null\r\n    const quotes = book? book.quotes.join('\\n\\n') : ''\r\n\r\n    const getDateString = (date) => {\r\n        let year = date.getFullYear()\r\n        let month = date.getMonth() + 1\r\n        let day = date.getDate()\r\n        if (month < 10) month = `0${month}`\r\n        if (day < 10) day = `0${day}`\r\n\r\n        return `${year}-${month}-${day}`\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={props.submitHandler}>\r\n            <label className='add-form__row'>\r\n                <span>Название</span>\r\n                <input\r\n                    className='add-form__input input'\r\n                    type='text'\r\n                    defaultValue={book? book.title : ''}\r\n                />\r\n            </label>\r\n            <label className='add-form__row'>\r\n                <span>Автор</span>\r\n                <input\r\n                    className='add-form__input input'\r\n                    type='text'\r\n                    defaultValue={book? book.author : ''}\r\n                />\r\n            </label>\r\n            <label className='add-form__row'>\r\n                <span>Дата прочтения</span>\r\n                <input\r\n                    className='add-form__input add-form__input--date input'\r\n                    type='date'\r\n                    defaultValue={book? getDateString(date) : ''}\r\n                />\r\n            </label>\r\n            <label className='add-form__row'>\r\n                <span>Обложка</span>\r\n                <input\r\n                    className='add-form__input add-form__input--file add-form__input--small-text'\r\n                    type='file'\r\n                />\r\n            </label>\r\n            <label className='add-form__row'>\r\n                <span>Главная мысль</span>\r\n                <input\r\n                    className='add-form__input add-form__input--small-text input'\r\n                    type='text'\r\n                    defaultValue={book? book.mainIdea : ''}\r\n                />\r\n            </label>\r\n            <label className='add-form__row'>\r\n                <span>Цитаты</span>\r\n                <textarea\r\n                    className='add-form__textarea'\r\n                    placeholder='Если цитат больше одной, между ними оставлять пустую строку'\r\n                    defaultValue={quotes}\r\n                />\r\n            </label>\r\n            <Button\r\n                className='add-form__submit'\r\n                title='Записать'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddBookForm","import React from 'react'\r\nimport {db} from '../data'\r\nimport AddBookForm from './add-book-form'\r\nimport Button from './button'\r\n\r\nconst EditBookForm = (props) => {\r\n\r\n    let book = db[props.bookId]\r\n    \r\n    const deleteBook = () => {\r\n        delete db[props.bookId] // not work\r\n    }\r\n\r\n    const editBook = (e) => {\r\n        e.preventDefault()\r\n        book = Object.assign(book, e.target) // not work\r\n    }\r\n\r\n    return (\r\n        <section>\r\n\r\n            <Button\r\n                className='button button--warning'\r\n                title='Удалить книгу'\r\n                onClickHandler={deleteBook}\r\n            />\r\n\r\n            <AddBookForm\r\n                book={book}\r\n                submitHandler={editBook}\r\n            />\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditBookForm","import React from 'react'\r\nimport Book from './book'\r\nimport BookList from './booklist'\r\nimport User from './user'\r\nimport LoginForm from './login-form'\r\nimport AddBookForm from './add-book-form'\r\nimport EditBookForm from './edit-book-form'\r\n\r\nconst Main = (props) => {\r\n\r\n    const bookScreen = (\r\n        <Book\r\n            bookId={props.state.bookId ? props.state.bookId : props.state.lastBookId}\r\n            lastBookId={props.state.lastBookId}\r\n            switchBookToOlder={props.switchBookToOlder}\r\n            switchBookToNewer={props.switchBookToNewer}\r\n        />\r\n    )\r\n    const bookListScreen = (\r\n        <BookList\r\n            state={props.state}\r\n            openBook={props.openBook}\r\n        />\r\n    )\r\n    const userScreen = (\r\n        <User\r\n            lastBookId={props.state.lastBookId}\r\n            switchTheme={props.switchTheme}\r\n            lightTheme={props.state.lightTheme}\r\n            logout={props.logout}\r\n        />\r\n    )\r\n    const loginScreen = (\r\n        <LoginForm\r\n            login={props.login}\r\n        />\r\n    )\r\n    const addBookScreen = (\r\n        <AddBookForm />\r\n    )\r\n    const editBookScreen = (\r\n        <EditBookForm\r\n            bookId={props.state.bookId}\r\n        />\r\n    )\r\n\r\n    const {screen} = props.state;\r\n    let renderScreen = null;\r\n\r\n    switch (screen) {\r\n        case 'book':\r\n            renderScreen = bookScreen; break;\r\n        case 'booklist':\r\n            renderScreen = bookListScreen; break;\r\n        case 'user':\r\n            renderScreen = userScreen; break;\r\n        case 'login':\r\n            renderScreen = loginScreen; break;\r\n        case 'add-book':\r\n            renderScreen = addBookScreen; break;\r\n        case 'edit-book':\r\n            renderScreen = editBookScreen; break;\r\n        default:\r\n            renderScreen = bookListScreen; break;\r\n    }\r\n\r\n    return (\r\n        <main className='app__main main'>\r\n\r\n            {renderScreen}\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React, {Component} from 'react'\r\nimport Header from './header'\r\nimport Main from './main'\r\nimport {sortedBooks} from '../data'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            screen: 'book',\r\n            search: '',\r\n            bookId: props.lastBookId,\r\n            lastBookId: props.lastBookId,\r\n            lightTheme: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                <Header \r\n                    screen={this.state.screen}\r\n                    searchHandler={this.searchHandler.bind(this)}\r\n                    openBookListScreen={this.openBookListScreen.bind(this)}\r\n                    openUserScreen={this.openUserScreen.bind(this)}\r\n                    openAddBookScreen={this.openAddBookScreen.bind(this)}\r\n                    openEditBookScreen={this.openEditBookScreen.bind(this)}\r\n                />\r\n                <Main \r\n                    state={this.state}\r\n                    openBook={this.openBook.bind(this)}\r\n                    switchBookToOlder={this.switchBookToOlder.bind(this)}\r\n                    switchBookToNewer={this.switchBookToNewer.bind(this)}\r\n                    switchTheme={this.switchTheme.bind(this)}\r\n                    login={this.login.bind(this)}\r\n                    logout={this.logout.bind(this)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    openBook(e) {\r\n        this.setState({\r\n            bookId: e.target.value,\r\n            screen: 'book',\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    openBookListScreen() {\r\n        this.setState({\r\n            screen: 'booklist'\r\n        })\r\n    }\r\n\r\n    openUserScreen() {\r\n        this.setState({\r\n            screen: 'user',\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    openAddBookScreen() {\r\n        this.setState({\r\n            screen: 'add-book',\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    openEditBookScreen() {\r\n        this.setState({\r\n            screen: 'edit-book',\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    searchHandler(search) {\r\n        this.setState({\r\n            search\r\n        })\r\n    }\r\n\r\n    switchBookToOlder() {\r\n        const newBook = sortedBooks[sortedBooks.findIndex((el) => {\r\n            return el.id === this.state.bookId\r\n        }) + 1].id\r\n        this.setState({\r\n            bookId: newBook\r\n        })\r\n    }\r\n\r\n    switchBookToNewer() {\r\n        const newBook = sortedBooks[sortedBooks.findIndex((el) => {\r\n            return el.id === this.state.bookId\r\n        }) - 1].id\r\n        this.setState({\r\n            bookId: newBook\r\n        })\r\n    }\r\n\r\n    switchTheme() {\r\n        const root = document.querySelector('html')\r\n        if (!this.state.lightTheme) {\r\n            root.style.setProperty('--main-bg-color', '#ddd')\r\n            root.style.setProperty('--main-color', '#333')\r\n            this.setState({\r\n                lightTheme: true\r\n            })\r\n        } else {\r\n            root.style.setProperty('--main-bg-color', '#333')\r\n            root.style.setProperty('--main-color', '#ddd')\r\n            this.setState({\r\n                lightTheme: false\r\n            })\r\n        }\r\n    }\r\n\r\n    login(e) {\r\n        e.preventDefault()\r\n        const form = e.target\r\n        if (form.email.value === '1@2.3' && form.password.value === '123') {\r\n            this.setState({\r\n                screen: 'book'\r\n            })\r\n        } else {\r\n            form.classList.add('shake')\r\n            setTimeout(() => {\r\n                form.classList.remove('shake')\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.setState({\r\n            screen: 'login'\r\n        })\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './components/app';\r\nimport {sortedBooks} from './data'\r\n\r\nrender(<App lastBookId={sortedBooks[0].id} />, document.getElementById('root'));"],"sourceRoot":""}