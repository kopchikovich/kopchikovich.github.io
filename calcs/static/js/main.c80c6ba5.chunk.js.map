{"version":3,"sources":["components/header.js","components/input-number.js","components/checkbox.js","components/button.js","components/output-string.js","calcs/calc-deposit.js","calcs/calc-dividends.js","calcs/calc-savings.js","components/text-block.js","calcs/calc-100days.js","components/app.js","index.js"],"names":["Header","props","className","title","InputNumber","type","value","onChange","onChangeHandler","Checkbox","checked","defaultChecked","name","Button","onClick","onClickHandler","disabled","OutputString","CalcDeposit","state","deposit","percent","days","capitalize","incomeDay","incomeDays","incomeMonth","incomeYear","onSubmit","this","calc","bind","setDeposit","setPercent","setDays","setCapitalize","e","setState","target","preventDefault","toFixed","depositWithIncome","i","Component","CalcDividends","useState","price","setPrice","dividends","setDividends","profit","setProfit","profitWithTax","setProfitWithTax","CalcSavings","setTarget","months","setMonths","payment","setPayment","capitalization","setCapitalization","result","setResult","targetPayment","setTargetPayment","month","amount","TextBlock","text","Calc100days","cardLimit","setCardLimit","income100days","setIncome100days","setIncomeDay","setIncomeMonth","setIncomeYear","getIncome","money","limit","alert","minimumPayment","resultIncome","toString","App","exact","path","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c80c6ba5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.css'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className='header'>\r\n            {props.title}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './input-number.css'\r\n\r\nconst InputNumber = (props) => {\r\n    return (\r\n        <label className='input-container'>\r\n            <span className='input-container__text'>\r\n                {props.title}\r\n            </span>\r\n            <input\r\n                className='input-container__input'\r\n                type='number'\r\n                value={props.value}\r\n                onChange={props.onChangeHandler}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default InputNumber","import React from 'react'\r\nimport './checkbox.css'\r\n\r\nconst Checkbox = (props) => {\r\n    return (\r\n        <label className='checkbox-container'>\r\n            <input\r\n                className='checkbox-container__checkbox'\r\n                type='checkbox'\r\n                checked={props.checked}\r\n                defaultChecked={props.defaultChecked}\r\n                onChange={props.onChangeHandler}\r\n                name={props.name}\r\n            />\r\n            <span className='checkbox-container__text'>\r\n                {props.title}\r\n            </span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport './button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={props.className} onClick={props.onClickHandler} value={props.value} disabled={props.disabled}>\r\n            {props.title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './output-string.css'\r\n\r\nconst OutputString = (props) => {\r\n    return (\r\n        <p className='output-text'>\r\n            <span className='output-text__title'>{props.title}</span>\r\n            <span className='output-text__value'>{props.value}</span>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default OutputString","import React, {Component} from 'react'\r\nimport './calc.css'\r\nimport Header from '../components/header'\r\nimport InputNumber from '../components/input-number'\r\nimport Checkbox from '../components/checkbox'\r\nimport Button from '../components/button'\r\nimport OutputString from '../components/output-string'\r\n\r\nclass CalcDeposit extends Component {\r\n\r\n    state = {\r\n        deposit: 10000,\r\n        percent: 6,\r\n        days: 7,\r\n        capitalize: false,\r\n        incomeDay: 0,\r\n        incomeDays: 0,\r\n        incomeMonth: 0,\r\n        incomeYear: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className='calc'>\r\n                <form className='input-data' onSubmit={this.calc.bind(this)}>\r\n                    <Header title='Калькулятор доходности депозита' />\r\n                    <InputNumber\r\n                        title='Сумма депозита'\r\n                        value={this.state.deposit}\r\n                        onChangeHandler={this.setDeposit.bind(this)}\r\n                    />\r\n                    <InputNumber\r\n                        title='Ставка депозита / процент на остаток'\r\n                        value={this.state.percent}\r\n                        onChangeHandler={this.setPercent.bind(this)}\r\n                    />\r\n                    <InputNumber\r\n                        title='Дней вклада'\r\n                        value={this.state.days}\r\n                        onChangeHandler={this.setDays.bind(this)}\r\n                    />\r\n                    <Checkbox\r\n                        title='Капитализация (для годового вклада)'\r\n                        checked={this.state.capitalize}\r\n                        onChangeHandler={this.setCapitalize.bind(this)}\r\n                    />\r\n                    <Button\r\n                        title='Рассчитать'\r\n                        className='submit'\r\n                    />\r\n                </form>\r\n                <div className='output-data'>\r\n                    <OutputString\r\n                        title='В день:'\r\n                        value={this.state.incomeDay}\r\n                    />\r\n                    <OutputString\r\n                        title={'За ' + this.state.days + ' дней:'}\r\n                        value={this.state.incomeDays}\r\n                    />\r\n                    <OutputString\r\n                        title='В месяц:'\r\n                        value={this.state.incomeMonth}\r\n                    />\r\n                    <OutputString\r\n                        title='В год:'\r\n                        value={this.state.incomeYear}\r\n                    />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    setDeposit(e) {\r\n        this.setState({\r\n            deposit: e.target.value\r\n        })\r\n    }\r\n\r\n    setPercent(e) {\r\n        this.setState({\r\n            percent: e.target.value\r\n        })\r\n    }\r\n\r\n    setDays(e) {\r\n        this.setState({\r\n            days: e.target.value\r\n        })\r\n    }\r\n\r\n    setCapitalize(e) {\r\n        this.setState({\r\n            capitalize: e.target.checked\r\n        })\r\n    }\r\n\r\n    calc(e) {\r\n        e.preventDefault();\r\n        const {deposit, percent, days, capitalize} = this.state;\r\n        const incomeDay = ((deposit*(percent/365)/100)).toFixed(2);\r\n        const incomeDays = (incomeDay*days).toFixed(2);\r\n        const incomeMonth = ((deposit*(percent/12)/100)).toFixed(2);\r\n        let incomeYear = 0;\r\n        if (capitalize) {\r\n            let month = +incomeMonth;\r\n            let depositWithIncome = +deposit;\r\n            for (var i=1; i<=12; i++) {\r\n                month = +(depositWithIncome*(percent/12)/100).toFixed(2);\r\n                depositWithIncome += month;\r\n            }\r\n            incomeYear = (depositWithIncome-deposit).toFixed(2);\r\n        } else {\r\n            incomeYear = ((deposit*percent)/100).toFixed(2);\r\n        }\r\n\r\n        this.setState({\r\n            incomeDay,\r\n            incomeDays,\r\n            incomeMonth,\r\n            incomeYear\r\n        })\r\n    }\r\n}\r\n\r\nexport default CalcDeposit","import React, { useState } from 'react'\r\nimport './calc.css'\r\nimport Header from '../components/header'\r\nimport InputNumber from '../components/input-number'\r\nimport Button from '../components/button'\r\nimport OutputString from '../components/output-string'\r\n\r\nconst CalcDividends = () => {\r\n\r\n    const [price, setPrice] = useState(0)\r\n    const [dividends, setDividends] = useState(0)\r\n    const [profit, setProfit] = useState(0)\r\n    const [profitWithTax, setProfitWithTax] = useState(0)\r\n\r\n    const calc = (e) => {\r\n        e.preventDefault()\r\n\r\n        setProfit((dividends*100/price).toFixed(2))\r\n        setProfitWithTax((dividends*87/price).toFixed(2))\r\n    }\r\n\r\n    return (\r\n        <section className='calc'>\r\n            <Header title='Калькулятор дивидендной доходности акции' />\r\n            <form className='input-data' onSubmit={calc}>\r\n                <InputNumber\r\n                    title='Цена акции'\r\n                    value={price}\r\n                    onChangeHandler={(e) => setPrice(+e.target.value)}\r\n                />\r\n                <InputNumber\r\n                    title='Дивидендный платеж (или дивиденды за год)'\r\n                    value={dividends}\r\n                    onChangeHandler={(e) => setDividends(+e.target.value)}\r\n                />\r\n                <Button\r\n                    title='Рассчитать'\r\n                    className='submit'\r\n                />\r\n            </form>\r\n            <div className='output-data'>\r\n                <OutputString\r\n                    title='Доходность до налога'\r\n                    value={profit}\r\n                />\r\n                <OutputString\r\n                    title='Доходность с учётом налога'\r\n                    value={profitWithTax}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CalcDividends","import React, {useState} from 'react'\r\nimport './calc.css'\r\nimport Header from '../components/header'\r\nimport InputNumber from '../components/input-number'\r\nimport Button from '../components/button'\r\nimport Checkbox from '../components/checkbox'\r\nimport OutputString from '../components/output-string'\r\n\r\nconst CalcSavings = () => {\r\n\r\n    let [target, setTarget] = useState(1000000)\r\n    let [percent, setPercent] = useState(6)\r\n    let [months, setMonths] = useState(36)\r\n    let [payment, setPayment] = useState(30000)\r\n    let [capitalization, setCapitalization] = useState(true)\r\n    let [result, setResult] = useState(0)\r\n    let [targetPayment, setTargetPayment] = useState(0)\r\n\r\n\r\n    const calc = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (capitalization) {\r\n            let month = months\r\n            let amount = 0\r\n            while (month !== 0) {\r\n                amount += payment\r\n                amount += +((amount*(percent/12)/100)).toFixed(0)\r\n                month--\r\n            }\r\n            setResult(amount.toFixed(0))\r\n        } else {\r\n            setResult((payment*months).toFixed(0))\r\n        }\r\n        setTargetPayment((target/months).toFixed(0))\r\n    }\r\n\r\n    return (\r\n        <section className='calc'>\r\n            <Header title='Калькулятор сбережений' />\r\n            <form className='input-data' onSubmit={calc}>\r\n                <InputNumber\r\n                    title='Цель (рублей)'\r\n                    value={target}\r\n                    onChangeHandler={(e) => setTarget(+e.target.value)}\r\n                />\r\n                <InputNumber\r\n                    title='Срок накопления (в месяцах)'\r\n                    value={months}\r\n                    onChangeHandler={(e) => setMonths(+e.target.value)}\r\n                />\r\n                <InputNumber\r\n                    title='Ожидаемая доходность (% годовых)'\r\n                    value={percent}\r\n                    onChangeHandler={(e) => setPercent(+e.target.value)}\r\n                />\r\n                <InputNumber\r\n                    title='Платеж в месяц'\r\n                    value={payment}\r\n                    onChangeHandler={(e) => setPayment(+e.target.value)}\r\n                />\r\n                <Checkbox\r\n                    title='Ежемесячная капитализация'\r\n                    checked={capitalization}\r\n                    onChangeHandler={() => setCapitalization(!capitalization)}\r\n                />\r\n                <Button\r\n                    title='Рассчитать'\r\n                    className='submit'\r\n                />\r\n            </form>\r\n            <div className='output-data'>\r\n                <OutputString\r\n                    title='Будет накоплено'\r\n                    value={result}\r\n                />\r\n                <OutputString\r\n                    title='Для достижения цели нужно откладывать в месяц (без капитализации)'\r\n                    value={targetPayment}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CalcSavings","import React from 'react'\r\nimport './text-block.css'\r\n\r\nconst TextBlock = (props) => {\r\n    return (\r\n        <p className='text-block'>\r\n            {props.text}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default TextBlock","import React, {useState} from 'react'\r\nimport './calc.css'\r\nimport Header from '../components/header'\r\nimport InputNumber from '../components/input-number'\r\nimport Button from '../components/button'\r\nimport OutputString from '../components/output-string'\r\nimport TextBlock from '../components/text-block'\r\n\r\nconst Calc100days = () => {\r\n\r\n  let [cardLimit, setCardLimit] = useState(200000)\r\n  let [percent, setPercent] = useState(6)\r\n  let [income100days, setIncome100days] = useState(0)\r\n  let [incomeDay, setIncomeDay] = useState(0)\r\n  let [incomeMonth, setIncomeMonth] = useState(0)\r\n  let [incomeYear, setIncomeYear] = useState(0)\r\n  const SERVICE = 1490\r\n\r\n  const calc = (e) => {\r\n    e.preventDefault()\r\n\r\n    const getIncome = (money, days) => {\r\n      return +((money*(percent/365)*days/100)).toFixed(0)\r\n    }\r\n\r\n    let limit = cardLimit\r\n    let days = 100\r\n    let amount = 0\r\n\r\n    while (days !== null) {\r\n      if (days === 100) {\r\n        if (limit < 50000) {\r\n          alert('Не имеет смысла :)')\r\n          break\r\n        }\r\n        limit -= 50000\r\n        amount += 50000\r\n        days -= 30\r\n      } else if (days >= 10 && days < 100) {\r\n        amount += getIncome(amount, 30)\r\n        let minimumPayment = +((cardLimit-limit)*5/100).toFixed(0)\r\n        amount -= minimumPayment\r\n        limit += minimumPayment\r\n        if (limit >= 50000) {\r\n          limit -= 50000\r\n          amount += 50000\r\n        } else if (limit < 50000 && limit !== 0) {\r\n          amount += limit\r\n          limit = 0\r\n        }\r\n        days -= 30\r\n      } else {\r\n        amount += getIncome(amount, 10)\r\n        days = null\r\n      }\r\n    }\r\n    const resultIncome = amount-(cardLimit-limit)\r\n\r\n    setIncome100days(resultIncome.toFixed(2))\r\n    setIncomeDay((resultIncome/100).toFixed(2))\r\n    setIncomeMonth((resultIncome/100*30).toFixed(2))\r\n    setIncomeYear((resultIncome/100*365).toFixed(2))\r\n  }\r\n\r\n  return (\r\n    <section className='calc'>\r\n      <Header title='Калькулятор доходности карты \"100 дней без %\"' />\r\n      <TextBlock text='Калькулятор считает, что дата отсчёта (и первого снятия) начинается с первого дня месяца. Обслуживание карты в год 1490 руб.' />\r\n      <form className='input-data' onSubmit={calc}>\r\n        <InputNumber\r\n          title='Кредитный лимит'\r\n          value={cardLimit}\r\n          onChangeHandler={(e) => setCardLimit(+e.target.value)}\r\n        />\r\n        <InputNumber\r\n          title='Ожидаемая доходность (% годовых)'\r\n          value={percent.toString()}\r\n          onChangeHandler={(e) => setPercent(+e.target.value)}\r\n        />\r\n        <Button\r\n          title='Рассчитать'\r\n          className='submit'\r\n        />\r\n      </form>\r\n      <div className='output-data'>\r\n        <TextBlock text='Примерный доход' />\r\n        <OutputString\r\n          title='За 100 дневный цикл'\r\n          value={income100days}\r\n        />\r\n        <OutputString\r\n          title='За день'\r\n          value={incomeDay}\r\n        />\r\n        <OutputString\r\n          title='За месяц'\r\n          value={incomeMonth}\r\n        />\r\n        <OutputString\r\n          title='За год'\r\n          value={incomeYear}\r\n        />\r\n        <OutputString\r\n          title='Год минус обслуживание'\r\n          value={(incomeYear-SERVICE).toFixed(2)}\r\n        />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Calc100days","import React from 'react'\r\nimport './app.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport CalcDeposit from '../calcs/calc-deposit'\r\nimport CalcDividends from '../calcs/calc-dividends'\r\nimport CalcSavings from '../calcs/calc-savings'\r\nimport Calc100days from '../calcs/calc-100days'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <ul className='main-menu'>\r\n            <li className='main-menu__link'>\r\n              <Link to='/deposit'>Калькулятор доходности депозита</Link>\r\n            </li>\r\n            <li className='main-menu__link'>\r\n              <Link to='/dividends'>Калькулятор дивидендной доходности акции</Link>\r\n            </li>\r\n            <li className='main-menu__link'>\r\n              <Link to='/savings'>Калькулятор сбережений</Link>\r\n            </li>\r\n            <li className='main-menu__link'>\r\n              <Link to='/100-days'>Калькулятор доходности карты \"100 дней без %\"</Link>\r\n            </li>\r\n          </ul>\r\n        </Route>\r\n        <Route path='/deposit'>\r\n          <CalcDeposit />\r\n        </Route>\r\n        <Route path='/dividends'>\r\n          <CalcDividends />\r\n        </Route>\r\n        <Route path='/savings'>\r\n          <CalcSavings />\r\n        </Route>\r\n        <Route path='/100-days'>\r\n          <Calc100days />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/app'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}